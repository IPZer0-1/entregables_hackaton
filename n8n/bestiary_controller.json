{
  "name": "bestiary_controller",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "message"
            },
            {
              "name": "id_personaje"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "73abf6d4-f0eb-4271-b64a-d99db092c5cc",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "Eres el encargado de proporcionar información al game master sobre los enemigos. \nEl game master te pedirá que le des un enemigo para un contexto concreto, deberas seleccionar uno adecuado de entre la lista de enemigos que te proporciona la herramienta Enemy_list.\n\nEstas son tus herramientas:\n\n-Herramienta Enemy_list: Es un subfujo que te proporcionara una lista de enemigos disponibles para usar ante cualquier consulta sobre enemigos. Siempre que necesites saber algo sobre un enemigo, primero deberás obtener su nombre y su ruta seleccionando uno que se ajuste a lo que necesita la narrativa, de entre la lista que te proporciona esta herramienta.\n\nSolo cuando tengas seleccionado un enemigo, entonces utiliza el formato de salida para dar respuesta. El nombre corresponde al campo nombre y la ruta corresponde al campo ruta. No añadas nada más.\n\nTen en cuenta que el game master puede preguntar por un enemigo cuyo nombre no sea exactamente igual a ninguno que tengas en la lista, por lo que usa lo más parecido que encuentres. Incluso traduciendo del español al inglés.\n\n",
          "returnIntermediateSteps": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        592,
        0
      ],
      "id": "71b470e9-7c60-4800-b7a3-fa4d166f2139",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9379a7ef-0fdb-401f-9b61-e211ce4977ec",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "0b8af0ec-bdd7-45f0-b825-bc148b9e8849",
              "name": "id_personaje",
              "value": "={{ $json.id_personaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        0
      ],
      "id": "14a9e214-d26c-470c-8862-f9bfdd37d715",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        420,
        220
      ],
      "id": "783caa63-f135-473d-ae1b-29d66c4c4d90",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "3OuBtjZj9GbiCGfk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=Personaje_{{ $('Edit Fields').item.json.id_personaje }}",
        "tableName": "n8n_chat_enemies"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        560,
        220
      ],
      "id": "4755cbea-4196-4d63-bb21-c3b762f6fe23",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "btcvao5zoGI73Y56",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        680,
        220
      ],
      "id": "f507a461-102a-4b67-884a-a5996b88bcc6",
      "name": "Calculator"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enemy_list",
          "mode": "list",
          "cachedResultName": "enemy_list"
        },
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        800,
        220
      ],
      "id": "b9a25a24-3669-4513-9272-4e9d1f0933d7",
      "name": "Enemy_list",
      "credentials": {
        "postgres": {
          "id": "btcvao5zoGI73Y56",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Llama a esta herramienta para obtener estadísticas de enemigos. \n\n-Para el parámetro nombre debes pasarle la ruta del enemigo elegido que obtendrás de la herramienta Enemy_list.\n\n-Es super importante esperar al menos 120 la respuesta del servidor.\n\n-Usa esta herramienta una sola vez.",
        "method": "POST",
        "url": "https://enemy-generator.onrender.com/consultar-enemigo/",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "ContentType",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "nombre"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        380,
        900
      ],
      "id": "f6ab9d87-bad3-4c23-9e6e-1390d616a133",
      "name": "get_enemy",
      "notesInFlow": false,
      "disabled": true
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"nombre\":  \"Derej Cobra\",\n  \"ruta\":  \"derej-cobra\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1160,
        0
      ],
      "id": "1f1e6f27-b153-4648-9065-3d2cccf7841b",
      "name": "parse_enemy"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.dateTimeTool",
      "typeVersion": 2,
      "position": [
        920,
        220
      ],
      "id": "269b02f5-e7c6-4f78-a24e-be64f2040219",
      "name": "Date_Time"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enemigos_actuales",
          "mode": "list",
          "cachedResultName": "enemigos_actuales"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', ``, 'string') }}",
            "armor_class": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('armor_class', ``, 'number') }}",
            "hit_dice": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('hit_dice', ``, 'string') }}",
            "number_of_attacks": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('number_of_attacks', ``, 'string') }}",
            "damage": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('damage', ``, 'string') }}",
            "movement": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('movement', ``, 'string') }}",
            "number_of_appearing": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('number_of_appearing', ``, 'string') }}",
            "save_as": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('save_as', ``, 'string') }}",
            "morale": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('morale', ``, 'number') }}",
            "treasure_type": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('treasure_type', ``, 'string') }}",
            "xp": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('xp', ``, 'number') }}",
            "descripcion": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('descripcion', ``, 'string') }}",
            "fecha_creacion": "={{ $now }}",
            "puntos_golpe": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('puntos_golpe', `Valor de hit_dice*10`, 'number') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "id_enemigo",
              "displayName": "id_enemigo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "armor_class",
              "displayName": "armor_class",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hit_dice",
              "displayName": "hit_dice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "number_of_attacks",
              "displayName": "number_of_attacks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "damage",
              "displayName": "damage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "movement",
              "displayName": "movement",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "number_of_appearing",
              "displayName": "number_of_appearing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "save_as",
              "displayName": "save_as",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "morale",
              "displayName": "morale",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "treasure_type",
              "displayName": "treasure_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "xp",
              "displayName": "xp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "descripcion",
              "displayName": "descripcion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_creacion",
              "displayName": "fecha_creacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "puntos_golpe",
              "displayName": "puntos_golpe",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        380,
        1140
      ],
      "id": "ff1de5a7-253c-4a8f-ae56-7430a9a4824e",
      "name": "save_enemy",
      "credentials": {
        "postgres": {
          "id": "btcvao5zoGI73Y56",
          "name": "Postgres account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "enemigos_actuales",
          "mode": "list",
          "cachedResultName": "enemigos_actuales"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "armor_class": "={{ $json.enemigo.armor_class }}",
            "morale": "={{ $json.enemigo.morale }}",
            "xp": "={{ parseInt($json.enemigo.xp.replace(\",\", \"\")) }}",
            "nombre": "={{ $json.enemigo.nombre }}",
            "hit_dice": "={{ $json.enemigo.hit_dice }}",
            "number_of_attacks": "={{ $json.enemigo.number_of_attacks }}",
            "damage": "={{ $json.enemigo.damage }}",
            "movement": "={{ $json.enemigo.movement }}",
            "number_of_appearing": "={{ $json.enemigo.number_of_appearing }}",
            "save_as": "={{ $json.enemigo.save_as }}",
            "treasure_type": "={{ $json.enemigo.treasure_type }}",
            "descripcion": "={{ $json.enemigo.descripcion }}",
            "fecha_creacion": "={{ $now }}",
            "puntos_golpe": "={{ parseInt($json.enemigo.hit_dice.match(/^\\d+/)[0]) *10}} "
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "id_enemigo",
              "displayName": "id_enemigo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "armor_class",
              "displayName": "armor_class",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "hit_dice",
              "displayName": "hit_dice",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "number_of_attacks",
              "displayName": "number_of_attacks",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "damage",
              "displayName": "damage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "movement",
              "displayName": "movement",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "number_of_appearing",
              "displayName": "number_of_appearing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "save_as",
              "displayName": "save_as",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "morale",
              "displayName": "morale",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "treasure_type",
              "displayName": "treasure_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "xp",
              "displayName": "xp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "descripcion",
              "displayName": "descripcion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_creacion",
              "displayName": "fecha_creacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "puntos_golpe",
              "displayName": "puntos_golpe",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1760,
        -220
      ],
      "id": "0301f9ac-0bbb-45ec-aff4-4b8eb93b6059",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "btcvao5zoGI73Y56",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://enemy-generator.onrender.com/consultar-enemigo/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "ContentType",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "nombre",
              "value": "={{ $json.output.ruta }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1540,
        -220
      ],
      "id": "1b65faee-74ae-42e8-9d71-19884928e8aa",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Debes tratar la salida del agente, para poder dar una salida con el formato esperado. Si el campo ruta viene con alguna URL elimina todo salvo lo que venga despues de la última \"/\" Salida_agente:{{ $json.output }}",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        900,
        -220
      ],
      "id": "b2327917-92ce-4ad3-85f9-df08fd979500",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        940,
        0
      ],
      "id": "745221a3-4496-4a59-a326-2ee02ff5329b",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "3OuBtjZj9GbiCGfk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7e850ef0-3749-488e-bf4a-2b7b56283c7d",
              "name": "output.ruta",
              "value": "={{ $json.output.ruta.split('/').pop() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1260,
        -220
      ],
      "id": "4ecf2f60-5268-4779-bba5-505c0f3c85bd",
      "name": "Edit Fields1"
    }
  ],
  "pinData": {
    "Edit Fields": [
      {
        "json": {
          "message": "Leopoldo está a punto de entrar en la cueva de la Montaña Helada para enfrentarse al temible Death Dragon.",
          "id_personaje": 1
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enemy_list": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_enemy": {
      "ai_tool": [
        []
      ]
    },
    "parse_enemy": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Date_Time": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "save_enemy": {
      "ai_tool": [
        []
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0752b5f5-720c-46a8-8cce-9c94b81d3329",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "eb8a1f649dcbecdbbf9304f18748ad20873c85400d0ffd3afe2830b61cab1c41"
  },
  "id": "xAHQSGK74M7EwmN4",
  "tags": []
}